'use client';

import { useState, useEffect } from 'react';
import { useRouter, useParams } from 'next/navigation';
import { useSession } from 'next-auth/react';
import Navigation from '@/components/layouts/Navigation';
import { depositApi } from '@/lib/api/deposits';
import {
  KazakhstanDeposit,
  ListingType,
  MineralType,
  RegionType,
} from '@/lib/types/listing';
import Link from 'next/link';

type FormData = {
  title: string;
  description: string;
  type: ListingType | '';
  mineral: MineralType | '';
  region: RegionType | '';
  city: string;
  price: number | null;
  area: number;
  coordinates: [number, number];

  // Mining License fields
  licenseSubtype?: string;
  licenseNumber?: string;
  licenseExpiry?: string;

  // Exploration License fields
  explorationStage?: string;
  explorationStart?: string;
  explorationEnd?: string;
  explorationBudget?: number;

  // Mineral Occurrence fields
  discoveryDate?: string;
  geologicalConfidence?: string;
  estimatedReserves?: string;
};

const REGIONS: RegionType[] = [
  '–ú–∞–Ω–≥–∏—Å—Ç–∞—É—Å–∫–∞—è',
  '–ê—Ç—ã—Ä–∞—É—Å–∫–∞—è',
  '–ó–∞–ø–∞–¥–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è',
  '–ê–∫—Ç—é–±–∏–Ω—Å–∫–∞—è',
  '–ö–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∞—è',
  '–ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è',
  '–ü–∞–≤–ª–æ–¥–∞—Ä—Å–∫–∞—è',
  '–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è',
  '–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è',
  '–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è',
  '–ñ–∞–º–±—ã–ª—Å–∫–∞—è',
  '–¢—É—Ä–∫–µ—Å—Ç–∞–Ω—Å–∫–∞—è',
  '–ö—ã–∑—ã–ª–æ—Ä–¥–∏–Ω—Å–∫–∞—è',
  '–£–ª—ã—Ç–∞—É—Å–∫–∞—è',
];

const MINERALS: MineralType[] = [
  '–ù–µ—Ñ—Ç—å',
  '–ì–∞–∑',
  '–ó–æ–ª–æ—Ç–æ',
  '–ú–µ–¥—å',
  '–£–≥–æ–ª—å',
  '–£—Ä–∞–Ω',
  '–ñ–µ–ª–µ–∑–æ',
];

export default function EditListingPage() {
  const { data: session, status } = useSession();
  const router = useRouter();
  const params = useParams();
  const listingId = params.id as string;

  const [formData, setFormData] = useState<FormData>({
    title: '',
    description: '',
    type: '',
    mineral: '',
    region: '',
    city: '',
    price: null,
    area: 0,
    coordinates: [0, 0],
  });

  const [originalListing, setOriginalListing] =
    useState<KazakhstanDeposit | null>(null);
  const [loading, setLoading] = useState(false);
  const [loadingData, setLoadingData] = useState(true);
  const [errors, setErrors] = useState<Record<string, string>>({});
  const [error, setError] = useState<string | null>(null);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏—è
  useEffect(() => {
    const loadListing = async () => {
      try {
        setLoadingData(true);
        const listing = await depositApi.getById(listingId);

        if (!listing) {
          setError('–û–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
          return;
        }

        setOriginalListing(listing);

        // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –¥–∞–Ω–Ω—ã–º–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
        setFormData({
          title: listing.title,
          description: listing.description,
          type: listing.type,
          mineral: listing.mineral,
          region: listing.region,
          city: listing.city,
          price: listing.price,
          area: listing.area,
          coordinates: listing.coordinates,

          // Type-specific fields
          licenseSubtype: listing.licenseSubtype || '',
          licenseNumber: listing.licenseNumber || '',
          licenseExpiry: listing.licenseExpiry
            ? new Date(listing.licenseExpiry).toISOString().split('T')[0]
            : '',

          explorationStage: listing.explorationStage || '',
          explorationBudget: listing.explorationBudget || undefined,

          discoveryDate: listing.discoveryDate
            ? new Date(listing.discoveryDate).toISOString().split('T')[0]
            : '',
          geologicalConfidence: listing.geologicalConfidence || '',
          estimatedReserves: listing.estimatedReserves?.toString() || '',
        });
      } catch (err) {
        setError(
          err instanceof Error
            ? err.message
            : '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö'
        );
        console.error('Error loading listing:', err);
      } finally {
        setLoadingData(false);
      }
    };

    if (listingId) {
      loadListing();
    }
  }, [listingId]);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  if (status === 'loading' || loadingData) {
    return (
      <div className="min-h-screen bg-gray-50">
        <Navigation />
        <div className="pt-16 flex items-center justify-center min-h-screen">
          <div className="text-center">
            <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600 mx-auto mb-4"></div>
            <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</p>
          </div>
        </div>
      </div>
    );
  }

  if (!session) {
    return (
      <div className="min-h-screen bg-gray-50">
        <Navigation />
        <div className="pt-16 flex items-center justify-center min-h-screen">
          <div className="text-center">
            <div className="text-6xl mb-4">üîí</div>
            <h1 className="text-2xl font-bold text-gray-900 mb-4">
              –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
            </h1>
            <p className="text-gray-600 mb-6">
              –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É, —á—Ç–æ–±—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è.
            </p>
            <Link
              href="/auth/login"
              className="bg-blue-600 text-white px-6 py-3 rounded-lg font-medium hover:bg-blue-700 transition-colors"
            >
              –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
            </Link>
          </div>
        </div>
      </div>
    );
  }

  if (error || !originalListing) {
    return (
      <div className="min-h-screen bg-gray-50">
        <Navigation />
        <div className="pt-16 flex items-center justify-center min-h-screen">
          <div className="text-center">
            <div className="text-6xl mb-4">‚ùå</div>
            <h1 className="text-2xl font-bold text-gray-900 mb-4">
              {error || '–û–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ'}
            </h1>
            <p className="text-gray-600 mb-6">
              –í–æ–∑–º–æ–∂–Ω–æ, –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ –∏–ª–∏ –≤—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤ –Ω–∞ –µ–≥–æ
              —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.
            </p>
            <Link
              href="/dashboard/my-listings"
              className="bg-blue-600 text-white px-6 py-3 rounded-lg font-medium hover:bg-blue-700 transition-colors"
            >
              –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –º–æ–∏–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º
            </Link>
          </div>
        </div>
      </div>
    );
  }

  const handleInputChange = (
    e: React.ChangeEvent<
      HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement
    >
  ) => {
    const { name, value, type } = e.target;

    setFormData((prev) => ({
      ...prev,
      [name]: type === 'number' ? (value ? Number(value) : null) : value,
    }));

    // –û—á–∏—Å—Ç–∫–∞ –æ—à–∏–±–∫–∏ –¥–ª—è –ø–æ–ª—è
    if (errors[name]) {
      setErrors((prev) => ({ ...prev, [name]: '' }));
    }
  };

  const handleCoordinateChange = (index: 0 | 1, value: string) => {
    const numValue = parseFloat(value) || 0;
    setFormData((prev) => ({
      ...prev,
      coordinates:
        index === 0
          ? [numValue, prev.coordinates[1]]
          : [prev.coordinates[0], numValue],
    }));
  };

  const validateForm = (): boolean => {
    const newErrors: Record<string, string> = {};

    if (!formData.title.trim()) {
      newErrors.title = '–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
    }

    if (!formData.description.trim()) {
      newErrors.description = '–û–ø–∏—Å–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
    }

    if (!formData.type) {
      newErrors.type = '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–±—ä—è–≤–ª–µ–Ω–∏—è';
    }

    if (!formData.mineral) {
      newErrors.mineral = '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ–∑–Ω–æ–µ –∏—Å–∫–æ–ø–∞–µ–º–æ–µ';
    }

    if (!formData.region) {
      newErrors.region = '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω';
    }

    if (!formData.city.trim()) {
      newErrors.city = '–ì–æ—Ä–æ–¥ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
    }

    if (!formData.area || formData.area <= 0) {
      newErrors.area = '–ü–ª–æ—â–∞–¥—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0';
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –ø–æ–ª–µ–π
    if (formData.type === 'MINING_LICENSE') {
      if (!formData.licenseNumber?.trim()) {
        newErrors.licenseNumber = '–ù–æ–º–µ—Ä –ª–∏—Ü–µ–Ω–∑–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
      }
      if (!formData.licenseExpiry) {
        newErrors.licenseExpiry = '–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ª–∏—Ü–µ–Ω–∑–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
      }
    }

    if (formData.type === 'EXPLORATION_LICENSE') {
      if (!formData.explorationStage?.trim()) {
        newErrors.explorationStage = '–°—Ç–∞–¥–∏—è —Ä–∞–∑–≤–µ–¥–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞';
      }
      if (!formData.explorationStart?.trim()) {
        newErrors.explorationStart = '–ü–µ—Ä–∏–æ–¥ —Ä–∞–∑–≤–µ–¥–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
      }
    }

    if (formData.type === 'MINERAL_OCCURRENCE') {
      if (!formData.discoveryDate) {
        newErrors.discoveryDate = '–î–∞—Ç–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞';
      }
      if (!formData.geologicalConfidence?.trim()) {
        newErrors.geologicalConfidence =
          '–ì–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞';
      }
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    if (!validateForm()) {
      return;
    }

    setLoading(true);

    try {
      const updateData: any = {
        title: formData.title,
        description: formData.description,
        type: formData.type as ListingType,
        mineral: formData.mineral as MineralType,
        region: formData.region as RegionType,
        city: formData.city,
        price: formData.price,
        area: formData.area,
        coordinates: formData.coordinates,

        // Type-specific fields
        ...(formData.type === 'MINING_LICENSE' && {
          licenseSubtype: formData.licenseSubtype || '–î–æ–±—ã—á–Ω–∞—è',
          licenseNumber: formData.licenseNumber,
          licenseExpiry: new Date(formData.licenseExpiry!),
        }),

        ...(formData.type === 'EXPLORATION_LICENSE' && {
          explorationStage: formData.explorationStage,
          explorationStart: formData.explorationStart,
          explorationBudget: formData.explorationBudget,
        }),

        ...(formData.type === 'MINERAL_OCCURRENCE' && {
          discoveryDate: new Date(formData.discoveryDate!),
          geologicalConfidence: formData.geologicalConfidence,
          estimatedReserves: formData.estimatedReserves,
        }),
      };

      await depositApi.update(listingId, updateData);

      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–±—ä—è–≤–ª–µ–Ω–∏—è
      router.push(`/listings/${listingId}`);
    } catch (error) {
      console.error('Error updating listing:', error);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setLoading(false);
    }
  };

  const renderTypeSpecificFields = () => {
    switch (formData.type) {
      case 'MINING_LICENSE':
        return (
          <div className="space-y-4">
            <h3 className="text-lg font-medium text-gray-900">
              –î–∞–Ω–Ω—ã–µ –ª–∏—Ü–µ–Ω–∑–∏–∏ –Ω–∞ –¥–æ–±—ã—á—É
            </h3>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ü–æ–¥—Ç–∏–ø –ª–∏—Ü–µ–Ω–∑–∏–∏
                </label>
                <select
                  name="licenseSubtype"
                  value={formData.licenseSubtype || ''}
                  onChange={handleInputChange}
                  className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ç–∏–ø</option>
                  <option value="–î–æ–±—ã—á–Ω–∞—è">–î–æ–±—ã—á–Ω–∞—è</option>
                  <option value="–°–æ–≤–º–µ—â–µ–Ω–Ω–∞—è">–°–æ–≤–º–µ—â–µ–Ω–Ω–∞—è</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ù–æ–º–µ—Ä –ª–∏—Ü–µ–Ω–∑–∏–∏ *
                </label>
                <input
                  type="text"
                  name="licenseNumber"
                  value={formData.licenseNumber || ''}
                  onChange={handleInputChange}
                  className={`w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                    errors.licenseNumber ? 'border-red-500' : 'border-gray-300'
                  }`}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: KZ1234567890"
                />
                {errors.licenseNumber && (
                  <p className="text-red-500 text-sm mt-1">
                    {errors.licenseNumber}
                  </p>
                )}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ª–∏—Ü–µ–Ω–∑–∏–∏ *
                </label>
                <input
                  type="date"
                  name="licenseExpiry"
                  value={formData.licenseExpiry || ''}
                  onChange={handleInputChange}
                  className={`w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                    errors.licenseExpiry ? 'border-red-500' : 'border-gray-300'
                  }`}
                />
                {errors.licenseExpiry && (
                  <p className="text-red-500 text-sm mt-1">
                    {errors.licenseExpiry}
                  </p>
                )}
              </div>
            </div>
          </div>
        );

      case 'EXPLORATION_LICENSE':
        return (
          <div className="space-y-4">
            <h3 className="text-lg font-medium text-gray-900">
              –î–∞–Ω–Ω—ã–µ –ª–∏—Ü–µ–Ω–∑–∏–∏ –Ω–∞ —Ä–∞–∑–≤–µ–¥–∫—É
            </h3>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –°—Ç–∞–¥–∏—è —Ä–∞–∑–≤–µ–¥–∫–∏ *
                </label>
                <select
                  name="explorationStage"
                  value={formData.explorationStage || ''}
                  onChange={handleInputChange}
                  className={`w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                    errors.explorationStage
                      ? 'border-red-500'
                      : 'border-gray-300'
                  }`}
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–¥–∏—é</option>
                  <option value="–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Ä–∞–∑–≤–µ–¥–∫–∞">
                    –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Ä–∞–∑–≤–µ–¥–∫–∞
                  </option>
                  <option value="–î–µ—Ç–∞–ª—å–Ω–∞—è —Ä–∞–∑–≤–µ–¥–∫–∞">–î–µ—Ç–∞–ª—å–Ω–∞—è —Ä–∞–∑–≤–µ–¥–∫–∞</option>
                  <option value="–î–æ—Ä–∞–∑–≤–µ–¥–∫–∞">–î–æ—Ä–∞–∑–≤–µ–¥–∫–∞</option>
                </select>
                {errors.explorationStage && (
                  <p className="text-red-500 text-sm mt-1">
                    {errors.explorationStage}
                  </p>
                )}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ü–µ—Ä–∏–æ–¥ —Ä–∞–∑–≤–µ–¥–∫–∏ *
                </label>
                <input
                  type="text"
                  name="explorationStart"
                  value={formData.explorationStart || ''}
                  onChange={handleInputChange}
                  className={`w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                    errors.explorationStart
                      ? 'border-red-500'
                      : 'border-gray-300'
                  }`}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 3 –≥–æ–¥–∞"
                />
                {errors.explorationStart && (
                  <p className="text-red-500 text-sm mt-1">
                    {errors.explorationStart}
                  </p>
                )}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ë—é–¥–∂–µ—Ç —Ä–∞–∑–≤–µ–¥–∫–∏ (‚Ç∏)
                </label>
                <input
                  type="number"
                  name="explorationBudget"
                  value={formData.explorationBudget || ''}
                  onChange={handleInputChange}
                  className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                  placeholder="–°—É–º–º–∞ –≤ —Ç–µ–Ω–≥–µ"
                  min="0"
                />
              </div>
            </div>
          </div>
        );

      case 'MINERAL_OCCURRENCE':
        return (
          <div className="space-y-4">
            <h3 className="text-lg font-medium text-gray-900">
              –î–∞–Ω–Ω—ã–µ —Ä—É–¥–æ–ø—Ä–æ—è–≤–ª–µ–Ω–∏—è
            </h3>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –î–∞—Ç–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è *
                </label>
                <input
                  type="date"
                  name="discoveryDate"
                  value={formData.discoveryDate || ''}
                  onChange={handleInputChange}
                  className={`w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                    errors.discoveryDate ? 'border-red-500' : 'border-gray-300'
                  }`}
                />
                {errors.discoveryDate && (
                  <p className="text-red-500 text-sm mt-1">
                    {errors.discoveryDate}
                  </p>
                )}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ì–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å *
                </label>
                <select
                  name="geologicalConfidence"
                  value={formData.geologicalConfidence || ''}
                  onChange={handleInputChange}
                  className={`w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                    errors.geologicalConfidence
                      ? 'border-red-500'
                      : 'border-gray-300'
                  }`}
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å</option>
                  <option value="–í—ã—Å–æ–∫–∞—è">–í—ã—Å–æ–∫–∞—è</option>
                  <option value="–°—Ä–µ–¥–Ω—è—è">–°—Ä–µ–¥–Ω—è—è</option>
                  <option value="–ù–∏–∑–∫–∞—è">–ù–∏–∑–∫–∞—è</option>
                </select>
                {errors.geologicalConfidence && (
                  <p className="text-red-500 text-sm mt-1">
                    {errors.geologicalConfidence}
                  </p>
                )}
              </div>

              <div className="md:col-span-2">
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –û—Ü–µ–Ω–æ—á–Ω—ã–µ –∑–∞–ø–∞—Å—ã
                </label>
                <textarea
                  name="estimatedReserves"
                  value={formData.estimatedReserves || ''}
                  onChange={handleInputChange}
                  rows={3}
                  className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                  placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ü–µ–Ω–æ—á–Ω—ã—Ö –∑–∞–ø–∞—Å–æ–≤ –ø–æ–ª–µ–∑–Ω–æ–≥–æ –∏—Å–∫–æ–ø–∞–µ–º–æ–≥–æ"
                />
              </div>
            </div>
          </div>
        );

      default:
        return null;
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <Navigation />

      {/* Header */}
      <div className="bg-white border-b border-gray-200 pt-16">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <div className="flex items-center space-x-4 mb-4">
            <Link
              href={`/listings/${listingId}`}
              className="text-gray-500 hover:text-gray-700"
            >
              ‚Üê –ù–∞–∑–∞–¥ –∫ –æ–±—ä—è–≤–ª–µ–Ω–∏—é
            </Link>
          </div>
          <h1 className="text-3xl font-bold text-gray-900">
            –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
          </h1>
          <p className="text-gray-600 mt-2">
            –í–Ω–µ—Å–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –¥–∞–Ω–Ω—ã–µ –æ –º–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–∏
          </p>
        </div>
      </div>

      {/* Form */}
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <form onSubmit={handleSubmit} className="space-y-8">
          {/* Basic Information */}
          <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
            <h2 className="text-xl font-semibold text-gray-900 mb-6">
              –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            </h2>

            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è *
                </label>
                <input
                  type="text"
                  name="title"
                  value={formData.title}
                  onChange={handleInputChange}
                  className={`w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                    errors.title ? 'border-red-500' : 'border-gray-300'
                  }`}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–µ –Ω–µ—Ñ—Ç–∏ –≤ –ú–∞–Ω–≥–∏—Å—Ç–∞—É—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏"
                />
                {errors.title && (
                  <p className="text-red-500 text-sm mt-1">{errors.title}</p>
                )}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –û–ø–∏—Å–∞–Ω–∏–µ *
                </label>
                <textarea
                  name="description"
                  value={formData.description}
                  onChange={handleInputChange}
                  rows={4}
                  className={`w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                    errors.description ? 'border-red-500' : 'border-gray-300'
                  }`}
                  placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏—è, –µ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π"
                />
                {errors.description && (
                  <p className="text-red-500 text-sm mt-1">
                    {errors.description}
                  </p>
                )}
              </div>

              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –¢–∏–ø –æ–±—ä—è–≤–ª–µ–Ω–∏—è *
                  </label>
                  <select
                    name="type"
                    value={formData.type}
                    onChange={handleInputChange}
                    className={`w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                      errors.type ? 'border-red-500' : 'border-gray-300'
                    }`}
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø</option>
                    <option value="MINING_LICENSE">–õ–∏—Ü–µ–Ω–∑–∏—è –Ω–∞ –¥–æ–±—ã—á—É</option>
                    <option value="EXPLORATION_LICENSE">
                      –õ–∏—Ü–µ–Ω–∑–∏—è –Ω–∞ —Ä–∞–∑–≤–µ–¥–∫—É
                    </option>
                    <option value="MINERAL_OCCURRENCE">–†—É–¥–æ–ø—Ä–æ—è–≤–ª–µ–Ω–∏–µ</option>
                  </select>
                  {errors.type && (
                    <p className="text-red-500 text-sm mt-1">{errors.type}</p>
                  )}
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –ü–æ–ª–µ–∑–Ω–æ–µ –∏—Å–∫–æ–ø–∞–µ–º–æ–µ *
                  </label>
                  <select
                    name="mineral"
                    value={formData.mineral}
                    onChange={handleInputChange}
                    className={`w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                      errors.mineral ? 'border-red-500' : 'border-gray-300'
                    }`}
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å–∫–æ–ø–∞–µ–º–æ–µ</option>
                    {MINERALS.map((mineral) => (
                      <option key={mineral} value={mineral}>
                        {mineral}
                      </option>
                    ))}
                  </select>
                  {errors.mineral && (
                    <p className="text-red-500 text-sm mt-1">
                      {errors.mineral}
                    </p>
                  )}
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –¶–µ–Ω–∞ (‚Ç∏)
                  </label>
                  <input
                    type="number"
                    name="price"
                    value={formData.price || ''}
                    onChange={handleInputChange}
                    className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                    placeholder="–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É"
                    min="0"
                  />
                  <p className="text-xs text-gray-500 mt-1">
                    –û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è &ldquo;–ü–æ –∑–∞–ø—Ä–æ—Å—É&rdquo;
                  </p>
                </div>
              </div>
            </div>
          </div>

          {/* Location */}
          <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
            <h2 className="text-xl font-semibold text-gray-900 mb-6">
              –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
            </h2>

            <div className="space-y-4">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –†–µ–≥–∏–æ–Ω *
                  </label>
                  <select
                    name="region"
                    value={formData.region}
                    onChange={handleInputChange}
                    className={`w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                      errors.region ? 'border-red-500' : 'border-gray-300'
                    }`}
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω</option>
                    {REGIONS.map((region) => (
                      <option key={region} value={region}>
                        {region}
                      </option>
                    ))}
                  </select>
                  {errors.region && (
                    <p className="text-red-500 text-sm mt-1">{errors.region}</p>
                  )}
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –ì–æ—Ä–æ–¥ *
                  </label>
                  <input
                    type="text"
                    name="city"
                    value={formData.city}
                    onChange={handleInputChange}
                    className={`w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                      errors.city ? 'border-red-500' : 'border-gray-300'
                    }`}
                    placeholder="–ì–æ—Ä–æ–¥ –∏–ª–∏ –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç"
                  />
                  {errors.city && (
                    <p className="text-red-500 text-sm mt-1">{errors.city}</p>
                  )}
                </div>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ü–ª–æ—â–∞–¥—å (–∫–º¬≤) *
                </label>
                <input
                  type="number"
                  name="area"
                  value={formData.area || ''}
                  onChange={handleInputChange}
                  className={`w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                    errors.area ? 'border-red-500' : 'border-gray-300'
                  }`}
                  placeholder="–ü–ª–æ—â–∞–¥—å –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö"
                  min="0"
                  step="0.01"
                />
                {errors.area && (
                  <p className="text-red-500 text-sm mt-1">{errors.area}</p>
                )}
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –®–∏—Ä–æ—Ç–∞
                  </label>
                  <input
                    type="number"
                    value={formData.coordinates[0] || ''}
                    onChange={(e) => handleCoordinateChange(0, e.target.value)}
                    className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 43.238949"
                    step="any"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –î–æ–ª–≥–æ—Ç–∞
                  </label>
                  <input
                    type="number"
                    value={formData.coordinates[1] || ''}
                    onChange={(e) => handleCoordinateChange(1, e.target.value)}
                    className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 76.889709"
                    step="any"
                  />
                </div>
              </div>
            </div>
          </div>

          {/* Type-specific fields */}
          {formData.type && (
            <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
              {renderTypeSpecificFields()}
            </div>
          )}

          {/* Submit */}
          <div className="flex justify-end space-x-4">
            <Link
              href={`/listings/${listingId}`}
              className="px-6 py-3 border border-gray-300 rounded-lg font-medium text-gray-700 hover:bg-gray-50 transition-colors"
            >
              –û—Ç–º–µ–Ω–∞
            </Link>
            <button
              type="submit"
              disabled={loading}
              className={`px-6 py-3 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 transition-colors ${
                loading ? 'opacity-50 cursor-not-allowed' : ''
              }`}
            >
              {loading ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è'}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}
