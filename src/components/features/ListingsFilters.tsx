'use client';

import { Suspense } from 'react';
import { useSearchParams, useRouter, usePathname } from 'next/navigation';
import { useCallback } from 'react';
import { REGIONS, MINERALS } from '@/lib/types/listing';
import AdvancedSearch from './AdvancedSearch';

function FiltersContent() {
  const searchParams = useSearchParams();
  const router = useRouter();
  const pathname = usePathname();

  // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É –∑–∞–ø—Ä–æ—Å–∞ —Å —É—á–µ—Ç–æ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  const createQueryString = useCallback(
    (name: string, value: string) => {
      const params = new URLSearchParams(searchParams.toString());
      if (value) {
        params.set(name, value);
      } else {
        params.delete(name);
      }
      return params.toString();
    },
    [searchParams]
  );

  const handleFilterChange = (key: string, value: string | boolean) => {
    const stringValue =
      typeof value === 'boolean' ? (value ? 'true' : '') : value;
    const queryString = createQueryString(
      key === 'query' ? 'q' : key,
      stringValue
    );
    router.push(`${pathname}?${queryString}`);
  };

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏–∑ URL
  const currentFilters = {
    query: searchParams.get('q') || '',
    type: searchParams.get('type') || '',
    region: searchParams.get('region') || '',
    mineral: searchParams.get('mineral') || '',
    priceMin: searchParams.get('priceMin') || '',
    priceMax: searchParams.get('priceMax') || '',
    verified: searchParams.get('verified') === 'true',
    sort: searchParams.get('sort') || 'newest',
  };

  return (
    <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-8">
      <h2 className="text-lg font-semibold text-gray-900 mb-6">
        –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã
      </h2>

      {/* Advanced Search */}
      <div className="mb-6">
        <label className="block text-sm font-medium text-gray-700 mb-3">
          –£–º–Ω—ã–π –ø–æ–∏—Å–∫
        </label>
        <AdvancedSearch />
      </div>

      {/* Filters Grid */}
      <div className="grid grid-cols-1 md:grid-cols-5 gap-4 mb-6">
        {/* –¢–∏–ø –æ–±—ä—è–≤–ª–µ–Ω–∏—è */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –¢–∏–ø –æ–±—ä—è–≤–ª–µ–Ω–∏—è
          </label>
          <select
            className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
            value={currentFilters.type}
            onChange={(e) => handleFilterChange('type', e.target.value)}
          >
            <option value="">–í—Å–µ —Ç–∏–ø—ã</option>
            <option value="MINING_LICENSE">–õ–∏—Ü–µ–Ω–∑–∏–∏ –Ω–∞ –¥–æ–±—ã—á—É</option>
            <option value="EXPLORATION_LICENSE">–õ–∏—Ü–µ–Ω–∑–∏–∏ –Ω–∞ —Ä–∞–∑–≤–µ–¥–∫—É</option>
            <option value="MINERAL_OCCURRENCE">
              –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä—É–¥–æ–ø—Ä–æ—è–≤–ª–µ–Ω–∏–∏
            </option>
          </select>
        </div>

        {/* –†–µ–≥–∏–æ–Ω */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –†–µ–≥–∏–æ–Ω
          </label>
          <select
            className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
            value={currentFilters.region}
            onChange={(e) => handleFilterChange('region', e.target.value)}
          >
            <option value="">–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã</option>
            {REGIONS.map((region) => (
              <option key={region} value={region}>
                {region}
              </option>
            ))}
          </select>
        </div>

        {/* –ú–∏–Ω–µ—Ä–∞–ª */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –ü–æ–ª–µ–∑–Ω–æ–µ –∏—Å–∫–æ–ø–∞–µ–º–æ–µ
          </label>
          <select
            className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
            value={currentFilters.mineral}
            onChange={(e) => handleFilterChange('mineral', e.target.value)}
          >
            <option value="">–í—Å–µ –º–∏–Ω–µ—Ä–∞–ª—ã</option>
            {MINERALS.map((mineral) => (
              <option key={mineral} value={mineral}>
                {mineral}
              </option>
            ))}
          </select>
        </div>

        {/* –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –ú–∏–Ω. —Ü–µ–Ω–∞ (–º–ª—Ä–¥ ‚Ç∏)
          </label>
          <input
            type="number"
            placeholder="0"
            className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
            value={currentFilters.priceMin}
            onChange={(e) => handleFilterChange('priceMin', e.target.value)}
          />
        </div>

        {/* –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –ú–∞–∫—Å. —Ü–µ–Ω–∞ (–º–ª—Ä–¥ ‚Ç∏)
          </label>
          <input
            type="number"
            placeholder="10000"
            className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
            value={currentFilters.priceMax}
            onChange={(e) => handleFilterChange('priceMax', e.target.value)}
          />
        </div>
      </div>

      {/* Sorting and Checkboxes */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
        {/* –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
          </label>
          <select
            className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
            value={currentFilters.sort}
            onChange={(e) => handleFilterChange('sort', e.target.value)}
          >
            <option value="newest">–°–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ</option>
            <option value="oldest">–°–Ω–∞—á–∞–ª–∞ —Å—Ç–∞—Ä—ã–µ</option>
            <option value="price_desc">–°–Ω–∞—á–∞–ª–∞ –¥–æ—Ä–æ–≥–∏–µ</option>
            <option value="price_asc">–°–Ω–∞—á–∞–ª–∞ –¥–µ—à–µ–≤—ã–µ</option>
            <option value="area_desc">–ë–æ–ª—å—à–∞—è –ø–ª–æ—â–∞–¥—å</option>
            <option value="area_asc">–ú–∞–ª–∞—è –ø–ª–æ—â–∞–¥—å</option>
            <option value="views_desc">–ü–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏</option>
          </select>
        </div>

        {/* –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ */}
        <div className="flex items-end">
          <label className="flex items-center space-x-2 pb-2">
            <input
              type="checkbox"
              className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
              checked={currentFilters.verified}
              onChange={(e) => handleFilterChange('verified', e.target.checked)}
            />
            <span className="text-sm text-gray-700">–¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ</span>
          </label>
        </div>

        {/* –°–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤ */}
        <div className="flex items-end justify-end">
          <button
            onClick={() => router.push(pathname)}
            className="px-4 py-2 text-sm font-medium text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors"
          >
            –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
          </button>
        </div>
      </div>

      {/* Quick Filters */}
      <div>
        <label className="block text-sm font-medium text-gray-700 mb-3">
          –ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
        </label>
        <div className="flex flex-wrap gap-2">
          {[
            { mineral: '–ù–µ—Ñ—Ç—å', icon: 'üõ¢Ô∏è' },
            { mineral: '–ì–∞–∑', icon: '‚õΩ' },
            { mineral: '–ó–æ–ª–æ—Ç–æ', icon: 'ü•á' },
            { mineral: '–ú–µ–¥—å', icon: 'üî∂' },
            { mineral: '–£–≥–æ–ª—å', icon: '‚ö´' },
            { mineral: '–£—Ä–∞–Ω', icon: '‚ò¢Ô∏è' },
            { mineral: '–ñ–µ–ª–µ–∑–æ', icon: 'üî©' },
          ].map(({ mineral, icon }) => (
            <button
              key={mineral}
              onClick={() => handleFilterChange('mineral', mineral)}
              className={`px-3 py-1 rounded-full text-sm font-medium transition-colors ${
                currentFilters.mineral === mineral
                  ? 'bg-blue-600 text-white'
                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
              }`}
            >
              {icon} {mineral}
            </button>
          ))}
        </div>
      </div>
    </div>
  );
}

function FiltersFallback() {
  return (
    <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-8">
      <div className="animate-pulse">
        <div className="h-6 bg-gray-200 rounded-md w-48 mb-6"></div>
        <div className="grid grid-cols-1 md:grid-cols-5 gap-4 mb-6">
          {[1, 2, 3, 4, 5].map((i) => (
            <div key={i}>
              <div className="h-4 bg-gray-200 rounded w-24 mb-2"></div>
              <div className="h-10 bg-gray-200 rounded-lg"></div>
            </div>
          ))}
        </div>
        <div className="flex space-x-2">
          {[1, 2, 3, 4, 5].map((i) => (
            <div key={i} className="h-8 bg-gray-200 rounded-full w-20"></div>
          ))}
        </div>
      </div>
    </div>
  );
}

export default function ListingsFilters() {
  return (
    <Suspense fallback={<FiltersFallback />}>
      <FiltersContent />
    </Suspense>
  );
}
